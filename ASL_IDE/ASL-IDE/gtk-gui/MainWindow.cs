
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	private global::Gtk.Action FileAction;
	private global::Gtk.Action NewAction;
	private global::Gtk.Action NewAction1;
	private global::Gtk.Action FileAction1;
	private global::Gtk.Action EditAction;
	private global::Gtk.Action BuildAction;
	private global::Gtk.Action TestAction;
	private global::Gtk.Action BuildWebAction;
	private global::Gtk.Action BuildWindowsAction;
	private global::Gtk.Action BuildGNULinuxAction;
	private global::Gtk.Action BuildMacOSXAction;
	private global::Gtk.Action CutAction;
	private global::Gtk.Action CopyAction;
	private global::Gtk.Action PasteAction1;
	private global::Gtk.Action NewAction2;
	private global::Gtk.Action OpenAction;
	private global::Gtk.Action SaveAction;
	private global::Gtk.Action SaveAsAction;
	private global::Gtk.Action ExitAction;
	private global::Gtk.Action HelpAction;
	private global::Gtk.VPaned vpaned5;
	private global::Gtk.MenuBar menubar7;
	private global::Gtk.ScrolledWindow GtkScrolledWindow;
	private global::Gtk.TextView textview4;
	
	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
		this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
		w1.Add (this.FileAction, null);
		this.NewAction = new global::Gtk.Action ("NewAction", global::Mono.Unix.Catalog.GetString ("New"), null, null);
		this.NewAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("New");
		w1.Add (this.NewAction, null);
		this.NewAction1 = new global::Gtk.Action ("NewAction1", global::Mono.Unix.Catalog.GetString ("New"), null, null);
		this.NewAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("New");
		w1.Add (this.NewAction1, null);
		this.FileAction1 = new global::Gtk.Action ("FileAction1", global::Mono.Unix.Catalog.GetString ("File"), null, null);
		this.FileAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
		w1.Add (this.FileAction1, null);
		this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("Edit"), null, null);
		this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Edit");
		w1.Add (this.EditAction, null);
		this.BuildAction = new global::Gtk.Action ("BuildAction", global::Mono.Unix.Catalog.GetString ("Build"), null, null);
		this.BuildAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Build");
		w1.Add (this.BuildAction, null);
		this.TestAction = new global::Gtk.Action ("TestAction", global::Mono.Unix.Catalog.GetString ("Test"), null, null);
		this.TestAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Test");
		w1.Add (this.TestAction, null);
		this.BuildWebAction = new global::Gtk.Action ("BuildWebAction", global::Mono.Unix.Catalog.GetString ("Build - Web"), null, null);
		this.BuildWebAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Build - Web");
		w1.Add (this.BuildWebAction, null);
		this.BuildWindowsAction = new global::Gtk.Action ("BuildWindowsAction", global::Mono.Unix.Catalog.GetString ("Build - Windows"), null, null);
		this.BuildWindowsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Build - Windows");
		w1.Add (this.BuildWindowsAction, null);
		this.BuildGNULinuxAction = new global::Gtk.Action ("BuildGNULinuxAction", global::Mono.Unix.Catalog.GetString ("Build - GNU/Linux"), null, null);
		this.BuildGNULinuxAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Build - GNU/Linux");
		w1.Add (this.BuildGNULinuxAction, null);
		this.BuildMacOSXAction = new global::Gtk.Action ("BuildMacOSXAction", global::Mono.Unix.Catalog.GetString ("Build - Mac OSX"), null, null);
		this.BuildMacOSXAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Build - Mac OSX");
		w1.Add (this.BuildMacOSXAction, null);
		this.CutAction = new global::Gtk.Action ("CutAction", global::Mono.Unix.Catalog.GetString ("Cut"), null, null);
		this.CutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Cut");
		w1.Add (this.CutAction, null);
		this.CopyAction = new global::Gtk.Action ("CopyAction", global::Mono.Unix.Catalog.GetString ("Copy"), null, null);
		this.CopyAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Copy");
		w1.Add (this.CopyAction, null);
		this.PasteAction1 = new global::Gtk.Action ("PasteAction1", global::Mono.Unix.Catalog.GetString ("Paste"), null, null);
		this.PasteAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("Paste");
		w1.Add (this.PasteAction1, null);
		this.NewAction2 = new global::Gtk.Action ("NewAction2", global::Mono.Unix.Catalog.GetString ("New"), null, null);
		this.NewAction2.ShortLabel = global::Mono.Unix.Catalog.GetString ("New");
		w1.Add (this.NewAction2, null);
		this.OpenAction = new global::Gtk.Action ("OpenAction", global::Mono.Unix.Catalog.GetString ("Open"), null, null);
		this.OpenAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Open");
		w1.Add (this.OpenAction, null);
		this.SaveAction = new global::Gtk.Action ("SaveAction", global::Mono.Unix.Catalog.GetString ("Save"), null, null);
		this.SaveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save");
		w1.Add (this.SaveAction, null);
		this.SaveAsAction = new global::Gtk.Action ("SaveAsAction", global::Mono.Unix.Catalog.GetString ("Save As"), null, null);
		this.SaveAsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save As");
		w1.Add (this.SaveAsAction, null);
		this.ExitAction = new global::Gtk.Action ("ExitAction", global::Mono.Unix.Catalog.GetString ("Exit"), null, null);
		this.ExitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Exit");
		w1.Add (this.ExitAction, null);
		this.HelpAction = new global::Gtk.Action ("HelpAction", global::Mono.Unix.Catalog.GetString ("Help"), null, null);
		this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Help");
		w1.Add (this.HelpAction, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("Anjin Script Language IDE");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		this.DefaultWidth = 800;
		this.DefaultHeight = 600;
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vpaned5 = new global::Gtk.VPaned ();
		this.vpaned5.Name = "vpaned5";
		this.vpaned5.Position = 26;
		// Container child vpaned5.Gtk.Paned+PanedChild
		this.UIManager.AddUiFromString ("<ui><menubar name='menubar7'><menu name='FileAction1' action='FileAction1'><menuitem name='NewAction2' action='NewAction2'/><menuitem name='OpenAction' action='OpenAction'/><menuitem name='SaveAction' action='SaveAction'/><menuitem name='SaveAsAction' action='SaveAsAction'/><menuitem name='ExitAction' action='ExitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='CutAction' action='CutAction'/><menuitem name='CopyAction' action='CopyAction'/><menuitem name='PasteAction1' action='PasteAction1'/></menu><menu name='BuildAction' action='BuildAction'><menuitem name='TestAction' action='TestAction'/><menuitem name='BuildWebAction' action='BuildWebAction'/><menuitem name='BuildWindowsAction' action='BuildWindowsAction'/><menuitem name='BuildGNULinuxAction' action='BuildGNULinuxAction'/><menuitem name='BuildMacOSXAction' action='BuildMacOSXAction'/></menu><menu name='HelpAction' action='HelpAction'/></menubar></ui>");
		this.menubar7 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar7")));
		this.menubar7.Name = "menubar7";
		this.vpaned5.Add (this.menubar7);
		global::Gtk.Paned.PanedChild w2 = ((global::Gtk.Paned.PanedChild)(this.vpaned5 [this.menubar7]));
		w2.Resize = false;
		// Container child vpaned5.Gtk.Paned+PanedChild
		this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
		this.GtkScrolledWindow.Name = "GtkScrolledWindow";
		this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
		this.textview4 = new global::Gtk.TextView ();
		this.textview4.CanFocus = true;
		this.textview4.Name = "textview4";
		this.GtkScrolledWindow.Add (this.textview4);
		this.vpaned5.Add (this.GtkScrolledWindow);
		this.Add (this.vpaned5);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.Show ();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
	}
}
